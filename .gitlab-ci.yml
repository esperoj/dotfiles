workflow:
  rules:
    - if: $CI_SERVER_HOST == "framagit.org"
      variables:
        DEFAULT_IMAGE: codeberg.org/esperoj/dotfiles:base
    - if: $CI_SERVER_HOST == "gitlab.com"
      variables:
        DEFAULT_IMAGE: $CI_REGISTRY/esperoj-group/dotfiles/dotfiles:base
    - if: $CI_SERVER_HOST == "gitlab.lain.la"
      variables:
        DEFAULT_IMAGE: esperoj/dotfiles:base

stages:
  - main

default:
  image:
    name: $DEFAULT_IMAGE
    entrypoint: [""]
  timeout: 6 hours
  after_script:
    - |
      EXCLUDES=("daily" "publish")
      if [[ "${WORKFLOW}" == "daily" && "${CI_JOB_STATUS}" == "failed" ]] || [[ -z "${WORKFLOW}" || ! " ${EXCLUDES[@]} " =~ " ${WORKFLOW} " ]]; then
        source ~/.profile
        notify.sh \
          "${COMMAND}" \
          "Title: Job '${CI_JOB_NAME}' of repository ${CI_PROJECT_URL} has completed with status ${CI_JOB_STATUS}." \
          "Actions: view, View Log, ${CI_JOB_URL}" | jq
      fi

include:
  - local: .gitlab-ci/dev.yml
    rules:
      - if: $WORKFLOW == "dev"
  - local: .gitlab-ci/run-command.yml
    rules:
      - if: $WORKFLOW == "run-command"
  - local: .gitlab-ci/daily.yml
    rules:
      - if: $WORKFLOW == "daily"

publish:
  stage: main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_SERVER_HOST == "gitlab.com" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $WORKFLOW == "publish"
  script:
    - echo -n "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"${DOCKERHUB_AUTH}\"}}}" >> /kaniko/.docker/config.json
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination $CI_REGISTRY/esperoj-group/dotfiles/dotfiles:base
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --build-arg "BASE_IMAGE=esperoj/dotfiles:base" --build-arg "SETUP_NAME=docker_main" --destination $CI_REGISTRY/esperoj-group/dotfiles/dotfiles:main
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --build-arg "BASE_IMAGE=esperoj/dotfiles:main" --build-arg "SETUP_NAME=docker_dev" --destination $CI_REGISTRY/esperoj-group/dotfiles/dotfiles:dev
